import { useState, useEffect, useRef } from "react";
import Head from "next/head";
import { useRouter } from "next/dist/client/router";
import TextField from "@mui/material/TextField";
import Image from "next/image";
import { createTheme, ThemeProvider } from "@mui/material/styles";
import CssBaseline from "@mui/material/CssBaseline";
import Button from "@mui/material/Button";

import useWindowDimensions from "../hooks/useWindowDimensions";
import styles from "../styles/Home.module.css";

const theme = createTheme({
  palette: {
    mode: "dark",
  },
});

const Home = () => {
  const { width, height } = useWindowDimensions();
  const router = useRouter();

  const [pendingLetters, setPendingLetters] = useState([]);
  const [approvedLetters, setApprovedLetters] = useState([]);
  const [rejectedLetters, setRejectedLetters] = useState([]);

  return (
    <div className={styles.container}>
      <Head>
        <title>TVS Project</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ThemeProvider theme={theme}>
          <CssBaseline />
          <div className={styles.logo}>
            <Image
              src="/tvs_logo.png" // Route of the image file
              height={80} // Desired size with correct aspect ratio
              width={200} // Desired size with correct aspect ratio
              alt="TVS Logo"
            />
          </div>

          <div className={styles.empInfo}>
            <div className={styles.empIcon}>R</div>
            <div className={styles.empDropdownContent}>
              <div
                className={styles.empDDList}
                onClick={() => {
                  localStorage.clear();
                  router.push("/");
                }}
              >
                Log Out
              </div>
            </div>
          </div>

          <div className={styles.empCont}>
            <div className={styles.empTitle}>Pending Letters</div>
            <div className={styles.listOfCards}>
              <div className={styles.listOCOuter}>
                {pendingLetters.length > 0 ? (
                  <div className={styles.listOCInner}>
                    {templates_data.map((td, i) => (
                      <div key={i} className={styles.createNewCard}>
                        <div className={styles.cardTitle}>
                          {td["temp_name"]}
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className={styles.noData}>Empty List!</div>
                )}
              </div>
            </div>
          </div>

          <div className={styles.empCont}>
            <div className={styles.empTitle}>Approved Letters</div>
            <div className={styles.listOfCards}>
              <div className={styles.listOCOuter}>
                {approvedLetters.length > 0 ? (
                  <div className={styles.listOCInner}>
                    {templates_data.map((td, i) => (
                      <div key={i} className={styles.createNewCard}>
                        <div className={styles.cardTitle}>
                          {td["temp_name"]}
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className={styles.noData}>Empty List!</div>
                )}
              </div>
            </div>
          </div>

          <div className={styles.empCont}>
            <div className={styles.empTitle}>Rejected Letters</div>
            <div className={styles.listOfCards}>
              <div className={styles.listOCOuter}>
                {rejectedLetters.length > 0 ? (
                  <div className={styles.listOCInner}>
                    {templates_data.map((td, i) => (
                      <div key={i} className={styles.createNewCard}>
                        <div className={styles.cardTitle}>
                          {td["temp_name"]}
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className={styles.noData}>Empty List!</div>
                )}
              </div>
            </div>
          </div>
        </ThemeProvider>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Home;
